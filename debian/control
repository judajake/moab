Source: moab
Priority: extra
Maintainer: Jason Kraftcheck <kraftche@cae.wisc.edu>
Build-Depends: debhelper (>= 7.0.50~), autotools-dev, dh-autoreconf, doxygen, g++, libhdf5-dev, libnetcdf-dev
Standards-Version: 3.8.4
Section: libs
Homepage: http://trac.mcs.anl.gov/projects/ITAPS/wiki/MOAB

Package: libmoab-dev
Section: libdevel
Architecture: any
Depends: libmoab0 (= ${binary:Version})
Description: Mesh-Oriented datABase development files
  MOAB is a component for representing and evaluating mesh data. 
  MOAB can store structured and unstructured mesh, consisting of 
  elements in the finite element "zoo". The functional 
  interface to MOAB is simple yet powerful, allowing the 
  representation of many types of metadata commonly found on the 
  mesh. MOAB is optimized for efficiency in space and time, based 
  on access to mesh in chunks rather than through individual
  entities, while also versatile enough to support individual 
  entity access. 

Package: libmoab-itaps-dev
Section: libdevel
Architecture: any
Depends: libmoab-itaps0 (= ${binary:Version})
Description: Mesh-Oriented datABase iMesh API development files
  MOAB is a component for representing and evaluating mesh data. 
  MOAB can store structured and unstructured mesh, consisting of 
  elements in the finite element "zoo". The functional 
  interface to MOAB is simple yet powerful, allowing the 
  representation of many types of metadata commonly found on the 
  mesh. MOAB is optimized for efficiency in space and time, based 
  on access to mesh in chunks rather than through individual
  entities, while also versatile enough to support individual 
  entity access. 

Package: libmoab0
Section: libs
Architecture: any
Depends: ${shlibs:Depends}, ${misc:Depends}
Description: Mesh-Oriented datABase libraries
  MOAB is a component for representing and evaluating mesh data. 
  MOAB can store structured and unstructured mesh, consisting of 
  elements in the finite element "zoo". The functional 
  interface to MOAB is simple yet powerful, allowing the 
  representation of many types of metadata commonly found on the 
  mesh. MOAB is optimized for efficiency in space and time, based 
  on access to mesh in chunks rather than through individual
  entities, while also versatile enough to support individual 
  entity access. 

Package: libmoab-itaps0
Section: libs
Architecture: any
Depends: libmoab0
Description: Mesh-Oriented datABase iMesh API libraries
  MOAB is a component for representing and evaluating mesh data. 
  MOAB can store structured and unstructured mesh, consisting of 
  elements in the finite element "zoo". The functional 
  interface to MOAB is simple yet powerful, allowing the 
  representation of many types of metadata commonly found on the 
  mesh. MOAB is optimized for efficiency in space and time, based 
  on access to mesh in chunks rather than through individual
  entities, while also versatile enough to support individual 
  entity access. 

Package: moab-utils
Section: libs
Architecture: any
Depends: libmoab0
Description: Mesh-Oriented datABase utilities
  MOAB is a component for representing and evaluating mesh data. 
  MOAB can store structured and unstructured mesh, consisting of 
  elements in the finite element "zoo". The functional 
  interface to MOAB is simple yet powerful, allowing the 
  representation of many types of metadata commonly found on the 
  mesh. MOAB is optimized for efficiency in space and time, based 
  on access to mesh in chunks rather than through individual
  entities, while also versatile enough to support individual 
  entity access. 
